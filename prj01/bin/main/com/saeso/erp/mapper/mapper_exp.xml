<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.saeso.erp.dao.ExpDAO">

	<!-- 1개의 게시글 검색하는 select문 내포한 select 태그 선언 -->
	<select id="getExp" parameterType="int" resultType="com.saeso.erp.dto.ExpDTO">
	
		select
		      ex.EXP_NO
		      , br.BRAND_NAME
		      , ex.CATE_NO
		      , ex.TITLE
		      , ex.SUBTITLE
		      , ex.THUMB_IMG
		      , ex.IMG
		      , ex.PROVIDE
		      , ex.PROVIDE_SHORT
		      , ex.MISSION
		      , ex.GUIDE
		      , ex.READCOUNT
		      , ex.LIKE_NUM
		      , ex.REG_DATE
		      , count(ea.EXP_APPL_NO) as APPL_NUM
		      , ex.SELECT_USER_NUM
		      , ex.KEYWORD
		      , to_char(ed.EXP_START_APPLY_DATE, 'mm-dd') as EXP_START_APPLY_DATE
		      , to_char(ed.EXP_LAST_APPLY_DATE, 'mm-dd') as EXP_LAST_APPLY_DATE
		      , to_char(ed.SELECT_ANNOUNCE_DATE, 'mm-dd') as SELECT_ANNOUNCE_DATE
		      , to_char(ed.REVIEW_START_REG_DATE, 'mm-dd') as REVIEW_START_REG_DATE
		      , to_char(ed.REVIEW_LAST_REG_DATE, 'mm-dd') as REVIEW_LAST_REG_DATE
      		  , ceil(ed.EXP_LAST_APPLY_DATE - sysdate) as APPL_DDAY
		from ((EXP ex left outer join  EXP_DATE ed on(ex.exp_no = ed.exp_no)) left outer join EXP_APPLY ea on ea.exp_no = ex.exp_no) left outer join BRAND br on br.CEO_NO = ex.CEO_NO
		where ex.EXP_NO = #{exp_no}
		group by ex.exp_no
		      , br.BRAND_NAME
		      , ex.CATE_NO
		      , ex.TITLE
		      , ex.SUBTITLE
		      , ex.THUMB_IMG
		      , ex.IMG
		      , ex.PROVIDE
		      , ex.PROVIDE_SHORT
		      , ex.MISSION
		      , ex.GUIDE
		      , ex.READCOUNT
		      , ex.LIKE_NUM
		      , ex.REG_DATE
		      , ex.SELECT_USER_NUM
		      , ex.KEYWORD
		      , ed.EXP_START_APPLY_DATE
		      , ed.EXP_LAST_APPLY_DATE
		      , ed.SELECT_ANNOUNCE_DATE
		      , ed.REVIEW_START_REG_DATE
		      , ed.REVIEW_LAST_REG_DATE
		
		
	</select>
	
	
	<!-- 조회수 1 증가하는 update 태그 선언 -->
	<update id="updateReadcount" parameterType="int">
		
		update EXP
		set
			READCOUNT = READCOUNT + 1
		where EXP_NO = #{exp_no}
		
	</update>
	
	
	<!-- 좋아요 수 +1 or -1 하는 update 태그 선언 -->
	<update id="updateLikes" parameterType="com.saeso.erp.dto.ExpUserDTO">
		
		
		update EXP
		set
			LIKE_NUM = LIKE_NUM + #{likesNum}
		where EXP_NO = #{exp_no}

		
	</update>
	
	<!-- 좋아요 테이블 insert -->
	<insert id='insertLikes' parameterType="com.saeso.erp.dto.ExpUserDTO">
		
		insert into LIKES values(#{member_no}, #{exp_no})
	
	</insert>
	
	
	<!-- 좋아요 테이블 delete -->
	<delete id="deleteLikes" parameterType="com.saeso.erp.dto.ExpUserDTO">
		
		delete from LIKES where MEMBER_NO = #{member_no} and EXP_NO = #{exp_no}
		
	</delete>
	
	
	
	
	<!-- 1개의 회원 정보 가져오기 -->
	<select id="getUser" parameterType="com.saeso.erp.dto.ExpUserDTO" resultType="com.saeso.erp.dto.MemberDTO">
		
		select
		  us.MEMBER_NO as member_no
		  , us.MEMBER_EMAIL as member_email
		  , us.MEMBER_NAME as member_name
		  , us.NICK as nick
		  , us.PHONE as phone
		  , us.DELIVERY_NAME as delivery_name
		  , us.ZIPCODE as zipcode
		  , us.ADDR1 as addr1
		  , us.ADDR2 as addr2
		  , (select count(*) from LIKES ls where us.MEMBER_NO = ls.MEMBER_NO and ls.EXP_NO = #{exp_no}) 
		  	as DID_LIKE
		from MEMBER us
		where MEMBER_EMAIL = #{member_email}
		
	</select>
	
	
	
	
	<!-- 체험 정보 가져오기 -->
	<select id="getExpAppl" parameterType="com.saeso.erp.dto.ExpUserDTO" resultType="int">
					
			select count(*)
			from EXP_APPLY
			where EXP_NO = #{exp_no} and MEMBER_NO = #{member_no}
		
	</select>
	
	
	
	<!-- 체험 신청 테이블 insert -->
	<insert id='applyExp' parameterType="com.saeso.erp.dto.ExpUserDTO">
		
		insert into EXP_APPLY(exp_appl_no, exp_no, member_no)
		values(
			( SELECT NVL(MAX(EXP_APPL_NO), 0) + 1 FROM EXP_APPLY )
			, #{exp_no}
			, #{member_no}
		)
	
	</insert>
	
	
	
	
	
	
	
	<!-- 체험 리스트 -->
	<!-- 아영 - 확인완료 -->
   <select id="getExpList" parameterType="com.saeso.erp.dto.ExpSearchDTO" resultType="java.util.HashMap">
     <!-- 페이징 -->
   
     SELECT * FROM
  (SELECT ROWNUM AS RNUM, zxcvb.* FROM   (
  <!--  -->
   SELECT
       ex.EXP_NO AS "exp_no",
      ex.THUMB_IMG as "exp_thumb_img",
      br.brand_name AS "brand_name",
      ceil(ed.EXP_LAST_APPLY_DATE - sysdate) as "appl_dday",
      ex.TITLE as "exp_title",
      ex.PROVIDE_SHORT as "exp_prov_sh",
      ex.SELECT_USER_NUM as "selec_num",
      count(ea.exp_appl_no) as "appl_num"
      <!-- 21.10.24 추가, member_no 이 있다면, 체험별 좋아요 수 검색 -->
      <if test="member_no != 0">
         ,(select count(*) from LIKES ls where ls.MEMBER_NO = #{member_no} and ls.EXP_NO = ex.exp_no) as "did_like" 
      </if>   
      <!-- /21.10.24 추가 -->
      <!-- 21.10.26 추가, 통합검색에서 사용 -->
      ,ex.subtitle as "subtitle"
      <!-- 21.10.26 명진 체험 좋아요 수 가져오기 -->
         ,(select count(ls.exp_no) from likes ls where ex.exp_no=ls.exp_no) as "like_sort"
   from
      ((EXP ex left outer join  EXP_DATE ed on(ex.exp_no = ed.exp_no))
      left outer join EXP_APPLY ea on ea.exp_no = ex.exp_no)
      left outer JOIN BRAND br ON ex.ceo_no = br.ceo_no
   where
      <!-- ceil(ed.REV_REG_LAST_DT - sysdate) >= 0 -->
      SYSDATE BETWEEN ed.EXP_START_APPLY_DATE  AND ed.EXP_LAST_APPLY_DATE
   and
   <if test="subTopValue==null or subTopValue.equals('recommend')">
      1=1
   </if>
   <if test="subTopValue!=null and subTopValue.equals('life')">
      ex.CATE_NO = 10
   </if>
   <if test="subTopValue!=null and subTopValue.equals('beauty')">
      ex.CATE_NO = 20
   </if>
   <if test="subTopValue!=null and subTopValue.equals('food')">
      ex.CATE_NO = 30
   </if>
   
   <if test="search!=null and search.length>0">
   AND 
         (brand_name like '%${search}%'
      OR 
         title like '%${search}%')
   </if>
   <!-- ================21.10.25 추가, 통합검색================ -->
   <!-- 키워드 -->
   <if test="nav_keyword != null and nav_keyword.length > 0">
      and (
         upper(brand_name) like upper('%${nav_keyword}%')
         OR 
         upper(title) like upper('%${nav_keyword}%')
         OR 
         upper(provide) like upper('%${nav_keyword}%')
         OR 
         upper(provide_short) like upper('%${nav_keyword}%')
      )
   </if> 
   <!-- 인기 검색어 -->
    <if test="topKeyword != null and topKeyword.size() > 0">
      and
      <foreach collection="topKeyword" item="topKeyword" open="(" separator=" or " close=")" index="idx">   
         upper(brand_name) like upper('%${topKeyword}%')
         OR 
         upper(title) like upper('%${topKeyword}%')
         OR 
         upper(provide) like upper('%${topKeyword}%')
         OR 
         upper(provide_short) like upper('%${topKeyword}%')
         OR 
         upper(keyword) like upper('%${topKeyword}%')
      </foreach>
   </if> 
   <!-- 카테고리 -->
    <if test="cate_no != null and cate_no.size() > 0">
      and
      <foreach collection="cate_no" item="cate_no" open="(" separator=" or " close=")" index="idx">   
         cate_no = ${cate_no}
      </foreach>
   </if>
   <!-- ================/21.10.25 추가, 통합검색================ -->
   group by
      ex.EXP_NO, ex.THUMB_IMG, br.brand_name, ceil(ed.EXP_LAST_APPLY_DATE - sysdate), ex.TITLE, ex.PROVIDE_SHORT, ex.SELECT_USER_NUM, EX.REG_DATE, EX.READCOUNT
      ,ex.subtitle
   order by
   <!-- 21.10.26 main 추가 -->
   <if test="mainCheck != null and mainCheck >0">
         "like_sort" desc,
    </if> 
    <!-- /21.10.26 main 추가 -->
   <if test="expList_sort==null or expList_sort.equals('recent')">
      EX.REG_DATE desc
   </if>
   <if test="expList_sort!=null and expList_sort.equals('popular')">
      EX.READCOUNT desc
   </if>
   <if test="expList_sort!=null and expList_sort.equals('deadline')">
      ceil(ed.EXP_LAST_APPLY_DATE - sysdate) asc
   </if>
   
   
        <!-- 페이징 -->
   
       ) zxcvb 
    <![CDATA[
      WHERE ROWNUM <= ${selectPageNo*rowCntPerPage} ) WHERE RNUM >= ${selectPageNo*rowCntPerPage-rowCntPerPage+1}
    ]]>
   </select>
	
	
	
	<!-- ****************************************************** -->
	<!-- 체험  -->
	<!-- ****************************************************** -->
	<select id="getExpinfo" parameterType="com.saeso.erp.dto.ExpDTO" resultType="int">
		select  
			* 
		from 
		    exp_tb 
		where 
			exp_title=#{exp_title} and exp_prov_sh=#{exp_prov_sh} and selec_num=#{selec_num}
			and exp_thumb_img=#{exp_thumb_img} and  exp_subtitle=#{exp_subtitle} and exp_prov=#{exp_prov}
			and exp_keyword=#{exp_keyword} and exp_mission=#{exp_mission} and exp_guide=#{exp_guide}
			and select_num=#{select_num} and exp_img=#{select_num}	
	</select>
	<select id="getCate" parameterType="com.saeso.erp.dto.ExpDTO" resultType="int">
		select  
			* 
		from 
		     cate_tb
		where 
			cate_name=#{cate_name}
	</select>
		<select id="getExpinfoDate" parameterType="com.saeso.erp.dto.ExpDTO" resultType="int">
		select  
			* 
		from 
		     exp_dt_tb 
		where 
			exp_appl_start_dt=#{exp_appl_start_dt} and exp_appl_last_dt#{exp_appl_start_dt} 
			and selec_ano_dt=#{selec_ano_dt} and rev_reg_start_dt=#{rev_reg_start_dt} and rev_reg_last_dt=#{rev_reg_last_dt}
	</select>
	
	
	
	
	<!-- 회원 이메일로 회원 번호 가져오기 (21.10.24 추가)  -->
	<select id="getMemberNo" parameterType="String" resultType="int">
		select member_no from member where member_email=#{member_email}
	</select>
	
	
	
	   <!-- 체험 총 개수 가져오기 -->
      <select id="getExpListAllCnt" parameterType="com.saeso.erp.dto.ExpSearchDTO" resultType="int">
      
        select 
    count(*)
  from 

      (
      SELECT
       ex.EXP_NO AS "exp_no",
      ex.THUMB_IMG as "exp_thumb_img",
      br.brand_name AS "brand_name",
      ceil(ed.EXP_LAST_APPLY_DATE - sysdate) as "appl_dday",
      ex.TITLE as "exp_title",
      ex.PROVIDE_SHORT as "exp_prov_sh",
      ex.SELECT_USER_NUM as "selec_num",
      count(ea.exp_appl_no) as "appl_num"
      <!-- 21.10.24 추가, member_no 이 있다면, 체험별 좋아요 수 검색 -->
      <if test="member_no != 0">
         ,(select count(*) from LIKES ls where ls.MEMBER_NO = #{member_no} and ls.EXP_NO = ex.exp_no) as "did_like" 
      </if>   
      <!-- /21.10.24 추가 -->
      <!-- 21.10.26 추가, 통합검색에서 사용 -->
      ,ex.subtitle as "subtitle"
      <!-- 21.10.26 명진 체험 좋아요 수 가져오기 -->
         ,(select count(ls.exp_no) from likes ls where ex.exp_no=ls.exp_no) as "like_sort"
   from
      ((EXP ex left outer join  EXP_DATE ed on(ex.exp_no = ed.exp_no))
      left outer join EXP_APPLY ea on ea.exp_no = ex.exp_no)
      left outer JOIN BRAND br ON ex.ceo_no = br.ceo_no
   where
      <!-- ceil(ed.REV_REG_LAST_DT - sysdate) >= 0 -->
      SYSDATE BETWEEN ed.EXP_START_APPLY_DATE  AND ed.EXP_LAST_APPLY_DATE
   and
   <if test="subTopValue==null or subTopValue.equals('recommend')">
      1=1
   </if>
   <if test="subTopValue!=null and subTopValue.equals('life')">
      ex.CATE_NO = 10
   </if>
   <if test="subTopValue!=null and subTopValue.equals('beauty')">
      ex.CATE_NO = 20
   </if>
   <if test="subTopValue!=null and subTopValue.equals('food')">
      ex.CATE_NO = 30
   </if>
   
   <if test="search!=null and search.length>0">
   AND 
         (brand_name like '%${search}%'
      OR 
         title like '%${search}%')
   </if>
   <!-- ================21.10.25 추가, 통합검색================ -->
   <!-- 키워드 -->
   <if test="nav_keyword != null and nav_keyword.length > 0">
      and (
         upper(brand_name) like upper('%${nav_keyword}%')
         OR 
         upper(title) like upper('%${nav_keyword}%')
         OR 
         upper(provide) like upper('%${nav_keyword}%')
         OR 
         upper(provide_short) like upper('%${nav_keyword}%')
      )
   </if> 
   <!-- 인기 검색어 -->
    <if test="topKeyword != null and topKeyword.size() > 0">
      and
      <foreach collection="topKeyword" item="topKeyword" open="(" separator=" or " close=")" index="idx">   
         upper(brand_name) like upper('%${topKeyword}%')
         OR 
         upper(title) like upper('%${topKeyword}%')
         OR 
         upper(provide) like upper('%${topKeyword}%')
         OR 
         upper(provide_short) like upper('%${topKeyword}%')
      </foreach>
   </if> 
   <!-- 카테고리 -->
    <if test="cate_no != null and cate_no.size() > 0">
      and
      <foreach collection="cate_no" item="cate_no" open="(" separator=" or " close=")" index="idx">   
         cate_no = ${cate_no}
      </foreach>
   </if>
   <!-- ================/21.10.25 추가, 통합검색================ -->
   group by
      ex.EXP_NO, ex.THUMB_IMG, br.brand_name, ceil(ed.EXP_LAST_APPLY_DATE - sysdate), ex.TITLE, ex.PROVIDE_SHORT, ex.SELECT_USER_NUM, EX.REG_DATE, EX.READCOUNT
      ,ex.subtitle
   order by
   <!-- 21.10.26 main 추가 -->
   <if test="mainCheck != null and mainCheck >0">
         "like_sort" desc,
    </if> 
    <!-- /21.10.26 main 추가 -->
   <if test="expList_sort==null or expList_sort.equals('recent')">
      EX.REG_DATE desc
   </if>
   <if test="expList_sort!=null and expList_sort.equals('popular')">
      EX.READCOUNT desc
   </if>
   <if test="expList_sort!=null and expList_sort.equals('deadline')">
      ceil(ed.EXP_LAST_APPLY_DATE - sysdate) asc
   </if>
   )
   </select>
	
	

</mapper>